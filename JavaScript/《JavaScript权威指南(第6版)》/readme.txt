---------------------------------------------------------------------------------
								这里是这本书的读书笔记。
--------------------------------------------------------------------------------- 
第5章，语句
1.var声明的变量是无法用delete删除的
2.如果var语句中变量没有指定初始化表达式，那么这个变量被初始为undefined
3.变量声明语句会被“提前”至脚本或函数的顶部，但是赋值语句的位置不变
4.使用函数声明语句的话，函数名称和函数体均提前
5.和var语句一样，函数声明语句创建的变量也是无法删除的
6.for/in循环并不会遍历对象的所有属性，只有“可枚举”的属性才会遍历到
7.for/in循环是按照属性定义的先后顺序来枚举简单对象的属性，先定义的属性先枚举
8.break和continue是JavaScript中唯一可以使用语句标签的语句
9.with,debugger,use strict
10.严格模式和非严格模式下的区别
---------------------
第6章，对象          
1.原型式继承-->原形链
2.对象属性名可以是包含空字符串在内的任意字符串，但对象中不能存在两个同名的属性
3.属性特性：可写、可枚举、可配置
4.对象特性：①对象的原型指向另外一个对象，本对象的属性继承自它的原型对象
            ②对象的类是一个标识对象类型的字符串
            ③对象的扩展标记指明了是否可以向该对象添加新的属性
5.①内置对象是由ECMAScript规范定义的对象或类
  ②宿主对象是由JavaScript解析器所嵌入的宿主环境（比如浏览器）定义的
  ③自定义对象是由运行中的JavaScript代码创建的对象
  ④自有属性是直接在对象中定义的属性
  ⑤继承属性是在对象的原型对象中定义的属性
6.创建对象：可以通过对象直接量、关键字new和Object.create()函数来创建对象
7.通过点(.)或方括号([])运算符来获取属性的值
8.在JavaScript中，只有在查询属性时才会体会到继承的存在，而设置属性则和继承无关
9.避免对象/对象属性不存在而报错的写法
   var len =  book && book.subtitle && book.subtitle.length;
10.delete运算符可以删除对象的属性。需要注意的是，delete只是断开属性和宿主对象的联系，而不会去操作属性中的属性
11.in,hasOwnPreperty()和propertyIsEnumerable()
12.get和set：存取器属性定义时，没有使用function关键字，而是使用get和set。注意，这里没有使用冒号将属性名和函数体分隔开，但是函数体的结束和下一个方法或数据属性之间有逗号分隔。
13.数据属性的四个特性分别是他的值、可写性、可枚举性和可配置性。
14.存取器属性的4个特性是读取、可写、可枚举性和可配置性
15.在ECMAScript5中，将对象作为参数传入Object.getPrototypeOf()可以查询它的原型。在ECMAScript3中，经常使用表达式o.constructor.prototype来检测一个对象的原型。
16.要想检测一个对象是否是另一个对象的原型，请使用isPrototypeOf()方法。
17.通过将对象传入Object.esExtensible(),来判断该对象是否是可扩转的。如果想将对象转换为不可扩展的，需要调用Object.preventExtensions(),将带转换的对象作为参数传进去。注意，一旦将对象转换为不可扩展的，就无法再将其转换回可扩展的了
18.Object.seal()除了能够将对象设置为不可扩展的，还可以将对象的所有自有属性都设置为不可配置。可以使用Object.isSealed()来检测对象是否封闭
19.Objcect.freeze()将更严格的锁定对象--"冻结",除了将对象设置为不可扩展的和将属性设置为不可配置的之外，还可以将它自由的所有数据属性设置为只读。使用Object.isFrozen()来检测对象是否冻结
20.对象序列化（serialization）是指将对象的状态转换为字符串，也可以将字符串还原为对象，ECMAScript5提供了内置的函数JSON.stringify()和JSON.parse()用来序列化和还原JavaScript对象
21.toString(),toLocaleString(),toJSON(),valueOf(),
---------------------
第7章，数组
1.JavaScript的数组是无类型的：数组元素可以是任意类型，并且同一个数组中的不同元素也可以有不同的类型
2.JavaScript数组可能是稀疏的：数组元素的索引不一定要连续的，他们之间可以有空缺
3.数组直接量的语法允许有可选的结尾的逗号，故[,,]只有两个元素而非三个
4.如果为一个数组元素赋值，他的索引i大于或等于现有数组的长度时，length属性的值将设置为i+1
5.当设置length属性为一个小于当前长度的非负整数n时，当前鼠族中那些索引值大于或等于n的元素将从中删除
6.push(),unshift(),delete,pop(),shift(),splice()
7.对一个数组元素使用delete不会修改数组的length属性，也不会将元素从高索引处移下来填充已删除属性留下的空白。如果从数组中删除一个元素，他就变成稀疏数组
8.forEach()
9.Array.join(),String.split();Array.reverse(),Array.sort();Array.concat(),Array.slice(),Array.splice();push(),pop();unshift(),shift();toString(),toLocaleString();map(),filter(),every(),some();reduce(),reduceRight();indexOf(),lastIndexOf();Array.isArray();
-----------------------
第8章，函数
1.区分实参和形参
2.